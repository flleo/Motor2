@model Motor2.Models.User

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>


@using (Html.BeginForm("Edit", "Users", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal bg-info p-2">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.user1, htmlAttributes: new { @class = "control-label col-md-2  text-left" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.user1, new { htmlAttributes = new { @class = "form-control col-2" } })
            @Html.ValidationMessageFor(model => model.user1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2 text-left" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control col-2" } })
            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2  text-left" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control col-2" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.Files.Any(f => f.FileType == (int?)Motor2.Models.FileType.Image))
    {
        <div class="form-group">
            <div class="col-md-2">
                <img src="~/Files?id=@Model.Files.First(f => f.FileType == (int?)Motor2.Models.FileType.Image).Id" style="height:100px;width:100px;" alt="@Model.nombreFichero" />
                <p>@Model.Files.First().FileName</p>
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.foto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="btn btn-file  ">
                <input type="file" class="input-file" id="Image" name="upload" />
                @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
